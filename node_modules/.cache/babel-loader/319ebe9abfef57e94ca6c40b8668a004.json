{"ast":null,"code":"var _jsxFileName = \"/Users/addyhebou/Desktop/#SpotifyGram/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // State is short term memory for handling variables\n  // Disappears when page refreshes\n  const [token, setToken] = useState(null);\n  const [{\n    user\n  }, dispatch] = useDataLayerValue(); // useEffect: Run code based on a given condition\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token); // stores token in State\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_USER',\n          user: user\n        });\n      });\n    }\n\n    console.log('I HAVE A TOKEN: 🔥', token);\n  }, []);\n  console.log(\"💪🏿💪🏿💪🏿\", user);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, token ?\n  /*#__PURE__*/\n  // If there is a token\n  React.createElement(Player, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }) :\n  /*#__PURE__*/\n  // Else if there is no token\n  React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/addyhebou/Desktop/#SpotifyGram/src/App.js"],"names":["React","useEffect","useState","Login","Player","getTokenFromUrl","SpotifyWebApi","useDataLayerValue","spotify","App","token","setToken","user","dispatch","hash","window","location","_token","access_token","setAccessToken","getMe","then","type","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,MAAMC,OAAO,GAAG,IAAIF,aAAJ,EAAhB;;AAEA,SAASG,GAAT,GAAe;AACb;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC;AAAEU,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBN,iBAAiB,EAA9C,CAJa,CAMb;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,IAAI,GAAGT,eAAe,EAA5B;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAGD,MAAH,EAAU;AACRN,MAAAA,QAAQ,CAACM,MAAD,CAAR,CADQ,CACS;;AAGjBT,MAAAA,OAAO,CAACW,cAAR,CAAuBF,MAAvB;AAEAT,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqBT,IAAI,IAAI;AAE3BC,QAAAA,QAAQ,CAAC;AAAE;AACTS,UAAAA,IAAI,EAAE,UADC;AAEPV,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OAND;AAOD;;AAEDW,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCd,KAAlC;AACD,GArBQ,EAqBN,EArBM,CAAT;AAuBAa,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BZ,IAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,KAAK;AAAA;AAAK;AACR,sBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG;AAAA;AAEC;AACJ,sBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,CADF;AAWD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // State is short term memory for handling variables\n  // Disappears when page refreshes\n  const [token, setToken] = useState(null)\n  const [{ user }, dispatch] = useDataLayerValue();\n\n  // useEffect: Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token){\n      setToken(_token) // stores token in State\n\n      \n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then(user => {\n\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_USER',\n          user: user,\n        })\n      });\n    }\n\n    console.log('I HAVE A TOKEN: 🔥', token);\n  }, []);\n\n  console.log(\"💪🏿💪🏿💪🏿\", user);\n\n  return (\n    <div className=\"app\">\n      {\n        token ? ( // If there is a token\n          <Player />\n        ) : ( // Else if there is no token\n          <Login />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}