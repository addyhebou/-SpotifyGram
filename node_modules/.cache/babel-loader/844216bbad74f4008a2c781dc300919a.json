{"ast":null,"code":"import _slicedToArray from\"/Users/addyhebou/Desktop/#SpotifyGram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./css/App.css';import Login from\"./components/Login\";import Player from\"./components/Player\";import Trending from\"./components/Trending.js\";import{getTokenFromUrl}from'./spotify';import SpotifyWebApi from\"spotify-web-api-js\";import{useDataLayerValue}from\"./DataLayer\";import{BrowserRouter as Router,Switch,Route,Link}from\"react-router-dom\";var spotify=new SpotifyWebApi();// const APIController = (function(){\n//   const clientId = '';\n//   const clientSecret = '';\n//   const _getToken = async () => {\n//     const result = await fetch('http://accounts.spotify.com/api/token', {\n//       method: 'POST',\n//       headers:{\n//         'Content-Type' : 'application/x-www-form-urlencoded',\n//         'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n//       },\n//       body: 'grant_type=client_credentials'\n//     });\n//     const data = await result.json();\n//     return data.access_token;\n//   }\n// }\n// )();\n// const _getTrack = async (token, trackEndPoint)=>{\n//   const result = await fetch(`${trackEndPoint}`,{\n//     method: 'GET',\n//     headers:{ 'Authorization' : 'Bearer ' + token}\n//   });\n//   const data = await result.json();\n//   return data;\n// }\nfunction App(){// State is short term memory for handling variables\n// Disappears when page refreshes\nvar _useDataLayerValue=useDataLayerValue(),_useDataLayerValue2=_slicedToArray(_useDataLayerValue,2),_useDataLayerValue2$=_useDataLayerValue2[0],user=_useDataLayerValue2$.user,token=_useDataLayerValue2$.token,dispatch=_useDataLayerValue2[1];// useEffect: Run code based on a given condition\nuseEffect(function(){var hash=getTokenFromUrl();window.location.hash=\"\";var _token=hash.access_token;if(_token){dispatch({type:\"SET_TOKEN\",token:_token});spotify.setAccessToken(_token);spotify.getMe().then(function(user){dispatch({// pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\ntype:'SET_USER',// sends SET_USER to reducer.js\nuser:user});});spotify.getUserPlaylists().then(function(playlists){dispatch({// pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\ntype:\"SET_PLAYLISTS\",// sends SET_USER to reducer.js\nplaylists:playlists});});spotify.getPlaylist('37i9dQZEVXcM6XdGAkZACa').then(function(response){dispatch({type:\"SET_DISCOVER_WEEKLY\",discover_weekly:response});});}},[]);return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\"},token?/*#__PURE__*/React.createElement(Player,{spotify:spotify}):/*#__PURE__*/React.createElement(Login,null),console.log(\"ğŸ’œğŸ’œğŸ’œğŸ’œğŸ’œğŸ’œ\")),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/trending\"},token?/*#__PURE__*/React.createElement(Trending,{spotify:spotify}):/*#__PURE__*/React.createElement(Login,null),console.log(\"ğŸ’šğŸ’šğŸ’šğŸ’šğŸ’š\")))));}export default App;","map":{"version":3,"sources":["/Users/addyhebou/Desktop/#SpotifyGram/src/App.js"],"names":["React","useEffect","useState","Login","Player","Trending","getTokenFromUrl","SpotifyWebApi","useDataLayerValue","BrowserRouter","Router","Switch","Route","Link","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists","getPlaylist","response","discover_weekly","console","log"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,OAASC,iBAAT,KAAkC,aAAlC,CACA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,MAFF,CAGEC,KAHF,CAIEC,IAJF,KAKO,kBALP,CAOA,GAAMC,CAAAA,OAAO,CAAG,GAAIP,CAAAA,aAAJ,EAAhB,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA,QAASQ,CAAAA,GAAT,EAAe,CACb;AACA;AAFa,uBAGuBP,iBAAiB,EAHxC,sGAGJQ,IAHI,sBAGJA,IAHI,CAGEC,KAHF,sBAGEA,KAHF,CAGWC,QAHX,wBAKb;AACAjB,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,IAAI,CAAGb,eAAe,EAA5B,CACAc,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAuB,EAAvB,CACA,GAAMG,CAAAA,MAAM,CAAGH,IAAI,CAACI,YAApB,CAEA,GAAGD,MAAH,CAAU,CACRJ,QAAQ,CAAC,CACPM,IAAI,CAAE,WADC,CAEPP,KAAK,CAAEK,MAFA,CAAD,CAAR,CAKAR,OAAO,CAACW,cAAR,CAAuBH,MAAvB,EACAR,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqB,SAAAX,IAAI,CAAI,CAC3BE,QAAQ,CAAC,CAAE;AACTM,IAAI,CAAE,UADC,CACW;AAClBR,IAAI,CAAEA,IAFC,CAAD,CAAR,CAID,CALD,EAOAF,OAAO,CAACc,gBAAR,GAA2BD,IAA3B,CAAgC,SAACE,SAAD,CAAe,CAC7CX,QAAQ,CAAC,CAAE;AACTM,IAAI,CAAE,eADC,CACgB;AACvBK,SAAS,CAAEA,SAFJ,CAAD,CAAR,CAID,CALD,EAOAf,OAAO,CAACgB,WAAR,CAAoB,wBAApB,EAA8CH,IAA9C,CAAmD,SAAAI,QAAQ,CAAG,CAC5Db,QAAQ,CAAC,CACPM,IAAI,CAAE,qBADC,CAEPQ,eAAe,CAAED,QAFV,CAAD,CAAR,CAID,CALD,EAMD,CACF,CAjCQ,CAiCN,EAjCM,CAAT,CAmCA,mBACE,oBAAC,MAAD,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,GAApB,EACGd,KAAK,cAAI,oBAAC,MAAD,EAAQ,OAAO,CAAEH,OAAjB,EAAJ,cAAoC,oBAAC,KAAD,MAD5C,CAEGmB,OAAO,CAACC,GAAR,CAAY,cAAZ,CAFH,CADF,cAKE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,WAApB,EACGjB,KAAK,cAAI,oBAAC,QAAD,EAAU,OAAO,CAAEH,OAAnB,EAAJ,cAAsC,oBAAC,KAAD,MAD9C,CAEGmB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAFH,CALF,CADF,CADF,CADF,CAgBD,CAED,cAAenB,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './css/App.css';\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport Trending from \"./components/Trending.js\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst spotify = new SpotifyWebApi();\n\n// const APIController = (function(){\n//   const clientId = '';\n//   const clientSecret = '';\n\n//   const _getToken = async () => {\n//     const result = await fetch('http://accounts.spotify.com/api/token', {\n//       method: 'POST',\n//       headers:{\n//         'Content-Type' : 'application/x-www-form-urlencoded',\n//         'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n//       },\n//       body: 'grant_type=client_credentials'\n//     });\n\n//     const data = await result.json();\n//     return data.access_token;\n//   }\n// }\n\n// )();\n\n// const _getTrack = async (token, trackEndPoint)=>{\n//   const result = await fetch(`${trackEndPoint}`,{\n//     method: 'GET',\n//     headers:{ 'Authorization' : 'Bearer ' + token}\n//   });\n\n//   const data = await result.json();\n//   return data;\n// }\n\n\nfunction App() {\n  // State is short term memory for handling variables\n  // Disappears when page refreshes\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // useEffect: Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token){\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_USER', // sends SET_USER to reducer.js\n          user: user,\n        })\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: \"SET_PLAYLISTS\", // sends SET_USER to reducer.js\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist('37i9dQZEVXcM6XdGAkZACa').then(response =>{\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path = \"/\">\n            {token ? (<Player spotify={spotify}/>) : (<Login />)}\n            {console.log(\"ğŸ’œğŸ’œğŸ’œğŸ’œğŸ’œğŸ’œ\")}\n          </Route>\n          <Route exact path = \"/trending\">\n            {token ? (<Trending spotify={spotify}/>) : (<Login />)}\n            {console.log(\"ğŸ’šğŸ’šğŸ’šğŸ’šğŸ’š\")}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}