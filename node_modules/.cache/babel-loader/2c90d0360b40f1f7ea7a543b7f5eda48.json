{"ast":null,"code":"var _jsxFileName = \"/Users/addyhebou/Desktop/#SpotifyGram/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // State is short term memory for handling variables\n  // Disappears when page refreshes\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue(); // useEffect: Run code based on a given condition\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_USER',\n          // sends SET_USER to reducer.js\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_PLAYLISTS',\n          // sends SET_USER to reducer.js\n          playlists: playlists\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, token ?\n  /*#__PURE__*/\n  // If there is a token\n  // console.log(\"OH LETS DO IT\");\n  React.createElement(Player, {\n    spotify: spotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }) :\n  /*#__PURE__*/\n  // Else if there is no token\n  React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/addyhebou/Desktop/#SpotifyGram/src/App.js"],"names":["React","useEffect","useState","Login","Player","getTokenFromUrl","SpotifyWebApi","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,MAAMC,OAAO,GAAG,IAAIF,aAAJ,EAAhB;;AAEA,SAASG,GAAT,GAAe;AACb;AACA;AACA,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkBC,QAAlB,IAA8BL,iBAAiB,EAArD,CAHa,CAKb;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAGR,eAAe,EAA5B;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAGD,MAAH,EAAU;AACRJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAKAR,MAAAA,OAAO,CAACW,cAAR,CAAuBH,MAAvB;AACAR,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqBX,IAAI,IAAI;AAC3BE,QAAAA,QAAQ,CAAC;AAAE;AACTM,UAAAA,IAAI,EAAE,UADC;AACW;AAClBR,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OALD;AAOAF,MAAAA,OAAO,CAACc,gBAAR,GAA2BD,IAA3B,CAAiCE,SAAD,IAAe;AAC7CX,QAAAA,QAAQ,CAAC;AAAE;AACTM,UAAAA,IAAI,EAAE,eADC;AACgB;AACvBK,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAID,OALD;AAOD;AAEF,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,KAAK;AAAA;AAAK;AACR;AACA,sBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG;AAAA;AAGC;AACJ,sBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN,CADF;AAYD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // State is short term memory for handling variables\n  // Disappears when page refreshes\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // useEffect: Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token){\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_USER', // sends SET_USER to reducer.js\n          user: user,\n        })\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_PLAYLISTS', // sends SET_USER to reducer.js\n          playlists: playlists,\n        });\n      });\n\n    }\n\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {\n        token ? ( // If there is a token\n          // console.log(\"OH LETS DO IT\");\n          <Player spotify={spotify}/>\n        ) : ( // Else if there is no token\n          <Login />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}