{"ast":null,"code":"import _objectSpread from\"/Users/addyhebou/Desktop/#SpotifyGram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var initialState={user:null,playlists:[],playing:false,item:null// token: \"BQALCt34Mp8sG9VugAPPHnKLyxq_cn8P4sc13JeuPOAMFOdZM_SYXw1XQCwErtIf7MPwMUcZYlASx8KszcWKnYcPVmHrPsxgab6NH2wP1z8AIjFCsfoABv_aDu9So1jfDw\",\n};var reducer=function reducer(state,action){// state is the status of user, playlists, etc. action is changing one of those items\nconsole.log(action);// Action -> type, [payload]\nswitch(action.type){case\"SET_USER\":// retrieves from the dispatch in App.js\nreturn _objectSpread(_objectSpread({},state),{},{// keep existing state, don't alter it\nuser:action.user});case\"SET_TOKEN\":return _objectSpread(_objectSpread({},state),{},{token:action.token});case\"SET_PLAYLISTS\":return _objectSpread(_objectSpread({},state),{},{playlists:action.playlists});case\"SET_DISCOVER_WEEKLY\":return _objectSpread(_objectSpread({},state),{},{discover_weekly:action.discover_weekly});default:return state;}};export default reducer;","map":{"version":3,"sources":["/Users/addyhebou/Desktop/#SpotifyGram/src/reducer.js"],"names":["initialState","user","playlists","playing","item","reducer","state","action","console","log","type","token","discover_weekly"],"mappings":"2JAAA,MAAO,IAAMA,CAAAA,YAAY,CAAG,CACxBC,IAAI,CAAE,IADkB,CAExBC,SAAS,CAAE,EAFa,CAGxBC,OAAO,CAAE,KAHe,CAIxBC,IAAI,CAAE,IACN;AALwB,CAArB,CAQP,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAkB,CAAE;AAChCC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAEA;AAEA,OAAOA,MAAM,CAACG,IAAd,EACI,IAAK,UAAL,CAAiB;AACb,sCACOJ,KADP,MACc;AACVL,IAAI,CAAEM,MAAM,CAACN,IAFjB,GAIJ,IAAK,WAAL,CACI,sCACOK,KADP,MAEIK,KAAK,CAAEJ,MAAM,CAACI,KAFlB,GAIJ,IAAK,eAAL,CACI,sCACOL,KADP,MAEIJ,SAAS,CAAEK,MAAM,CAACL,SAFtB,GAIJ,IAAK,qBAAL,CACI,sCACOI,KADP,MAEIM,eAAe,CAAEL,MAAM,CAACK,eAF5B,GAIJ,QACI,MAAON,CAAAA,KAAP,CAtBR,CAwBH,CA7BD,CA+BA,cAAeD,CAAAA,OAAf","sourcesContent":["export const initialState = {\n    user: null,\n    playlists: [],\n    playing: false,\n    item: null,\n    // token: \"BQALCt34Mp8sG9VugAPPHnKLyxq_cn8P4sc13JeuPOAMFOdZM_SYXw1XQCwErtIf7MPwMUcZYlASx8KszcWKnYcPVmHrPsxgab6NH2wP1z8AIjFCsfoABv_aDu9So1jfDw\",\n};\n\nconst reducer = (state, action) =>{ // state is the status of user, playlists, etc. action is changing one of those items\n    console.log(action); \n\n    // Action -> type, [payload]\n\n    switch(action.type){\n        case \"SET_USER\": // retrieves from the dispatch in App.js\n            return {\n                ...state, // keep existing state, don't alter it\n                user: action.user,\n            };\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: action.token,\n            };\n        case \"SET_PLAYLISTS\":\n            return{\n                ...state,\n                playlists: action.playlists,\n            };\n        case \"SET_DISCOVER_WEEKLY\":\n            return {\n                ...state,\n                discover_weekly: action.discover_weekly,\n            }\n        default:\n            return state;\n    }\n} \n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}