{"ast":null,"code":"import _slicedToArray from\"/Users/addyhebou/Desktop/#SpotifyGram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./App.css';import Login from\"./components/Login\";import Player from\"./components/Player\";import{getTokenFromUrl}from'./spotify';import SpotifyWebApi from\"spotify-web-api-js\";import{useDataLayerValue}from\"./DataLayer\";var spotify=new SpotifyWebApi();function App(){// State is short term memory for handling variables\n// Disappears when page refreshes\nvar _useDataLayerValue=useDataLayerValue(),_useDataLayerValue2=_slicedToArray(_useDataLayerValue,2),_useDataLayerValue2$=_useDataLayerValue2[0],user=_useDataLayerValue2$.user,token=_useDataLayerValue2$.token,dispatch=_useDataLayerValue2[1];// useEffect: Run code based on a given condition\nuseEffect(function(){var hash=getTokenFromUrl();window.location.hash=\"\";var _token=hash.access_token;if(_token){dispatch({type:\"SET_TOKEN\",token:_token});spotify.setAccessToken(_token);spotify.getMe().then(function(user){dispatch({// pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\ntype:'SET_USER',// sends SET_USER to reducer.js\nuser:user});});spotify.getUserPlaylists().then(function(playlists){dispatch({// pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\ntype:\"SET_PLAYLISTS\",// sends SET_USER to reducer.js\nplaylists:playlists});});spotify.getPlaylist('37i9dQZEVXcM6XdGAkZACa').then(function(response){dispatch({type:\"SET_DISCOVER_WEEKLY\",discover_weekly:response});});}},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},token?/*#__PURE__*/ // If there is a token\n// console.log(\"OH LETS DO IT\");\nReact.createElement(Player,{spotify:spotify}):/*#__PURE__*/ // Else if there is no token\nReact.createElement(Login,null));}export default App;","map":{"version":3,"sources":["/Users/addyhebou/Desktop/#SpotifyGram/src/App.js"],"names":["React","useEffect","useState","Login","Player","getTokenFromUrl","SpotifyWebApi","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists","getPlaylist","response","discover_weekly"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,OAASC,iBAAT,KAAkC,aAAlC,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAIF,CAAAA,aAAJ,EAAhB,CAEA,QAASG,CAAAA,GAAT,EAAe,CACb;AACA;AAFa,uBAGuBF,iBAAiB,EAHxC,sGAGJG,IAHI,sBAGJA,IAHI,CAGEC,KAHF,sBAGEA,KAHF,CAGWC,QAHX,wBAKb;AACAX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,IAAI,CAAGR,eAAe,EAA5B,CACAS,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAuB,EAAvB,CACA,GAAMG,CAAAA,MAAM,CAAGH,IAAI,CAACI,YAApB,CAEA,GAAGD,MAAH,CAAU,CACRJ,QAAQ,CAAC,CACPM,IAAI,CAAE,WADC,CAEPP,KAAK,CAAEK,MAFA,CAAD,CAAR,CAKAR,OAAO,CAACW,cAAR,CAAuBH,MAAvB,EACAR,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqB,SAAAX,IAAI,CAAI,CAC3BE,QAAQ,CAAC,CAAE;AACTM,IAAI,CAAE,UADC,CACW;AAClBR,IAAI,CAAEA,IAFC,CAAD,CAAR,CAID,CALD,EAOAF,OAAO,CAACc,gBAAR,GAA2BD,IAA3B,CAAgC,SAACE,SAAD,CAAe,CAC7CX,QAAQ,CAAC,CAAE;AACTM,IAAI,CAAE,eADC,CACgB;AACvBK,SAAS,CAAEA,SAFJ,CAAD,CAAR,CAID,CALD,EAOAf,OAAO,CAACgB,WAAR,CAAoB,wBAApB,EAA8CH,IAA9C,CAAmD,SAAAI,QAAQ,CAAG,CAC5Db,QAAQ,CAAC,CACPM,IAAI,CAAE,qBADC,CAEPQ,eAAe,CAAED,QAFV,CAAD,CAAR,CAKD,CAND,EAQD,CAEF,CApCQ,CAoCN,EApCM,CAAT,CAsCA,mBACE,2BAAK,SAAS,CAAC,KAAf,EAEId,KAAK,eAAK;AACR;AACA,oBAAC,MAAD,EAAQ,OAAO,CAAEH,OAAjB,EAFG,eAGC;AACJ,oBAAC,KAAD,MANN,CADF,CAYD,CAED,cAAeC,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // State is short term memory for handling variables\n  // Disappears when page refreshes\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // useEffect: Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token){\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_USER', // sends SET_USER to reducer.js\n          user: user,\n        })\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: \"SET_PLAYLISTS\", // sends SET_USER to reducer.js\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist('37i9dQZEVXcM6XdGAkZACa').then(response =>{\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n\n        });\n      });\n\n    }\n\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {\n        token ? ( // If there is a token\n          // console.log(\"OH LETS DO IT\");\n          <Player spotify={spotify}/>\n        ) : ( // Else if there is no token\n          <Login />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}