{"version":3,"sources":["spotify.js","components/Login.js","components/SidebarOption.tsx","DataLayer.js","components/Sidebar.js","components/Header.tsx","components/SongRow.js","components/Body.js","components/Footer.tsx","components/Player.js","components/Post.tsx","components/MusicElem.tsx","components/Hashtag.tsx","components/TrendingSidebar.tsx","components/TrendingBody.js","components/Trending.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","to","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","spotify","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","console","log","Post","profile","date","mediaUrl","text","socialname","split","toLowerCase","id","MusicElem","art","songname","Hashtag","tag","TrendingSidebar","TrendingBody","class","Trending","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","exact","path","state","action","Boolean","hostname","match","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6050a008.chunk.js","sourcesContent":["export const authEndpoint = \n\"https://accounts.spotify.com/authorize\";\n\nconst redirectUri = \"http://localhost:3000/\";\nconst clientId = \"c8b5d20bd8bf4e64b2e4bb2c52194a08\";\n\n\nconst scopes = [\n    \"user-read-currently-playing\",\n    \"user-read-recently-played\",\n    \"user-read-playback-state\",\n    \"user-top-read\",\n    \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split(\"&\")\n        .reduce((initial, item) => {\n            // #accessToken=mysupersecretkey&name=sonny\n            let parts = item.split('=');\n            initial[parts[0]] = \n            decodeURIComponent(parts[1]);\n\n            return initial;\n        }, {}); \n}\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n","import React from 'react';\nimport '../css/Login.css';\nimport { loginUrl } from '../spotify';\n\nfunction Login() {\n    return (\n        <div className=\"login\">\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt = \"Spotify Logo\"/>\n            <a href = {loginUrl}>LOGIN WITH SPOTIFY</a>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react';\nimport \"../css/SidebarOption.css\";\n\nfunction SidebarOption({ title, Icon } : {title:string, Icon:any}) {\n    return (\n        <div className = \"sidebarOption\">\n            {Icon && <Icon className = \"sidebarOption_icon\"/>}\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n        </div>\n    );\n}\n\nexport default SidebarOption;\n","import React, { createContext, useContext, useReducer} from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, \n    reducer, children }) => (\n        <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n            {children}\n        </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);","import React from 'react';\nimport \"../css/Sidebar.css\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport SidebarOption from './SidebarOption.tsx';\nimport { useDataLayerValue } from \"../DataLayer\";\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nfunction Sidebar() {\n    const [{ playlists }, dispatch] = useDataLayerValue();\n    \n    return (\n        <div className = \"sidebar\">\n            <img className = \"sidebar_logo\" src = \"http://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt = \"Spotify Icon\"></img>\n            <Link to=\"/\">\n                <SidebarOption title=\"Home\" Icon={HomeIcon}/>\n            </Link>\n            <SidebarOption title=\"Search\" Icon={SearchIcon}/>\n            <SidebarOption title=\"Your Library\" Icon={LibraryMusicIcon}/>\n            <Link to=\"/trending\">\n                <SidebarOption title=\"Trending\" Icon={LibraryMusicIcon}/>\n            </Link>\n\n            <br/>\n            <strong className = \"sidebar_title\">PLAYLISTS</strong>\n            <hr/>\n\n            {playlists?.items?.map((playlist) => (\n                <SidebarOption title={playlist.name}/>\n            ))}\n            <SidebarOption title=\"Emo Rap\" />\n            <SidebarOption title=\"Pop\" />\n            <SidebarOption title=\"Dance\" />\n        </div>\n        \n    );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport \"../css/Header.css\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Avatar } from '@material-ui/core';\nimport { useDataLayerValue } from '../DataLayer';\n\n\nfunction Header() {\n    const [{ user }, dispatch] = useDataLayerValue();\n\n    return (\n        <div className=\"header\">\n            <div className=\"header_left\">\n                <SearchIcon />\n                <input \n                    placeholder=\"Search for Artists, Songs, or Playlists\"\n                    type = \"text\"\n                />\n            </div>\n            <div className=\"header_right\">\n                <Avatar src = {user?.images[0]?.url} alt = \"Addy Avator Icon\"/>\n                <h4>{user?.display_name}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport \"../css/SongRow.css\";\n\nfunction SongRow({ track }) {\n    return (\n        <div className=\"songRow\">\n            <img className = \"songRow_album\" src = {track.album.images[0].url} alt = \"album image\"/>\n            <div className = \"songRow_info\">\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artist) => artist.name).join(\", \")}\n                    {track.album.name}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SongRow\n","import React from 'react';\nimport Header from './Header'\nimport '../css/Body.css';\nimport { useDataLayerValue } from '../DataLayer';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from \"../components/SongRow\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n\nfunction Body({ spotify }) {\n    const [{ user, discover_weekly }, dispatch] = useDataLayerValue();\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify}/>\n            <div className = \"body_info\">\n                <img src = {discover_weekly?.images[0].url} /* {user?.images[0]?.url} */ alt = \"\"/>\n                <div className = \"body_infoText\">\n                    <strong>PLAYLIST</strong>\n                    <h2>Discover Weekly</h2>\n                    <p>{discover_weekly?.description}</p>\n                </div>\n            </div>\n\n            <div className = \"body_songs\">\n                <div className = \"body_icons\">\n                    <PlayCircleFilledIcon className = \"body_shuffle\"/>\n                    <FavoriteIcon fontSize=\"large\"/>\n                    <MoreHorizIcon />\n                </div>\n\n                {/* List of songs */}\n                {discover_weekly?.tracks.items.map((item) =>(\n                    <SongRow track = {item.track} />\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default Body;\n","import React from 'react';\nimport \"../css/Footer.css\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport { Grid, Slider } from \"@material-ui/core\";\n\nfunction Footer() {\n    return (\n        <div className = \"footer\">\n            <div className = \"footer_left\">\n                <img className = \"footer_albumLogo\" src=\"https://yt3.ggpht.com/a/AATXAJy0wqROWNDaMS8EcoJNvOXxPRc_zqs-Im-1owX6=s400-c-k-c0x00ffffff-no-rj\" alt=\"\"/>\n                <div className=\"footer_songInfo\">\n                    <h4>All Yours</h4>\n                    <p>Saint Steph</p>\n                </div>\n            </div>\n            <div className = \"footer_center\">\n                <ShuffleIcon className = \"footer_green\"/>\n                <SkipPreviousIcon className = \"footer_icon\"/>\n                <PlayCircleOutlineIcon fontSize=\"large\" className = \"footer_icon\"/>\n                <SkipNextIcon className = \"footer_icon\"/>\n                <RepeatIcon className = \"footer_green\"/>\n            </div>\n            <div className = \"footer_right\">\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon />\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport Body from './Body.js';\nimport Footer from './Footer.tsx';\nimport \"../css/Player.css\";\nimport \"../css/Sidebar.css\";\n\nfunction Player({ spotify }) {\n    return (\n        <div className = \"player\">\n            {console.log(\"💜💜💜💜💜💜\")}\n            <div className = \"player_body\">\n                <Sidebar />\n                <Body spotify={spotify}/>\n            </div>\n            <Footer />\n        </div>     \n    )\n}\n\nexport default Player;","import React from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport '../css/Post.css';\nimport '../hashtagColor.tsx';\n\nfunction Post({ profile = \"\", name, date = \"Jun 17\", mediaUrl, text }: { profile: string, name: string, date: string, mediaUrl: string, text: string }) {\n    let socialname = name.split(\" \").join(\"\").toLowerCase();\n    return (\n        <div className=\"holder\">\n            <div className=\"topline\">\n                <img src = {profile} alt = \"Profile Picture\"/>\n                <strong>{name}</strong>\n                <p>@{socialname} | {date}</p>\n            </div>\n            <div className=\"text\" id = \"text\">\n                <p>{text}</p>\n            </div>\n            <div className=\"media\">\n                <img src = {mediaUrl} alt = \"\"/>\n            </div>\n            <div className=\"bottomline\">\n                <ChatBubbleOutlineIcon /><p>17</p>\n                <FavoriteBorderIcon /><p>8</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Post\n","import React from 'react';\nimport '../css/MusicElem.css';\n\n\nfunction MusicElem({ art, songname, artist}: { art: string, songname: string, artist: string}) {\n    return (\n        <div className = \"elem\">\n            <img src = {art} alt = \"Artwork\"/>\n            <strong>{artist}</strong>\n            <p>{songname}</p> \n        </div>\n    )\n}\n\nexport default MusicElem\n","import React from 'react';\nimport '../css/Hashtag.css';\n\n\nfunction Hashtag({tag} : {tag: string}) {\n    return (\n        <div className = \"hashtag\">\n            <h3>#{tag}</h3>\n        </div>\n    )\n}\n\nexport default Hashtag\n","import React from 'react';\nimport \"../css/TrendingSidebar.css\";\nimport Hashtag from './Hashtag';\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction TrendingSidebar() {\n    return (\n        <div className = \"t_sidebar\">\n            <h1>Trending Tags</h1>\n            <Hashtag tag = \"jcole\"/>\n            <Hashtag tag = \"snowonthabluff\"/>\n            <Hashtag tag = \"blm\"/>\n            <Hashtag tag = \"noname\"/>\n            <Hashtag tag = \"J. Cole\"/>\n            <Hashtag tag = \"kendrick\"/>\n            <Hashtag tag = \"thisisamerica\"/>\n        </div>\n        \n    );\n}\n\nexport default TrendingSidebar;\n","import React from 'react';\nimport Header from './Header'\nimport axios from 'axios';\nimport Post from './Post.tsx'\nimport '../css/TrendingBody.css';\nimport '../css/TrendingSidebar.css';\nimport { useDataLayerValue } from '../DataLayer';\nimport MusicElem from './MusicElem.tsx'\nimport TrendingSidebar from './TrendingSidebar.tsx'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nfunction TrendingBody({ spotify }) {\n    const [{ user, discover_weekly }, dispatch] = useDataLayerValue();\n    let text1 = \n    `\n        Cole and Kendrick literally hit the streets. Why do they need to tweet? \n        They’ve literally always used their platform to shed light on these kinds of issues. \n        Let’s build each other up, there’s no need for this kind of infighting. \n        SMH #JCole #KendrickLamar #NoName #SnowOnThaBluff\n\n    `\n    let profile1 = \"https://pbs.twimg.com/profile_images/1244423745860784128/GuH12aEt_400x400.jpg\"\n    let text2 = \n    `\n    A lot of activist need to really listen to the lyrics of this new J. Cole song.\n    Unfortunately a lot of you \"woke\" niggas have superiority complex\n    #SnowOnThaBluff\n    `\n    let profile2 = \"https://pbs.twimg.com/profile_images/1303047889107791873/kWZUsR99_400x400.jpg\"\n    let text3 = ` @noname drops #Song33 a response to @JCole #SnowOnThaBluff`\n    let profile3 = \"https://images.complex.com/image/upload/w_650/complex_nbiphu.jpg\"\n    let text4 = `Morning.  I stand behind every word of the song that dropped last night #SnowOnThaBluff`\n    let profile4 = \"https://pbs.twimg.com/profile_images/1286117233585008640/CBP7O5Xm_400x400.jpg\"\n\n// export default class PersonList extends React.Component{\n//     state = {\n//         data: []\n//     }\n      \n//       componentDidMount(){\n//         axios.get(`https://api.spotify.com/v1/tracks/{4SFknyjLcyTLJFPKD2m96o}`)\n//           .then(res => {\n//             const artistName = res.name;\n//             const albumArtwork = res.images.url;\n//             this.setState({data});\n//           })\n//       }\n      \n    return (\n            <div class = \"bigBody\">\n                <Header className = \"header\" spotify={spotify}/>\n                <div className = \"flexBody\">\n                    <div className=\"t_body\">\n                        <div className = \"t_body_info\">\n                            <div className = \"t_body_infoText\">\n                                <h2>Trending</h2>\n                                <p><strong>J. Cole </strong>Snow On Tha Bluff</p>\n                                <MoreHorizIcon className = \"moreOptionIcon\"/>\n                            </div>\n                            <AddCircleIcon className = \"plusIcon\"/>\n                        </div>\n                        <div className = \"postPanel\">\n                            <Post profile = {profile1} name = \"Fred Dalger\" text = {text1}/>\n                            <Post profile = {profile2} name = \"D. Dames\" text = {text2}/>\n                            <div>\n                                <Post profile = {profile3} name = \"Complex\" text = {text3}/>\n                                <Post profile = {profile4} name = \"J Cole\" text = {text4}/>\n                            </div>\n                        </div>\n                        <hr/>\n                        <div className = \"trendingPanel\">\n                            <div className = \"trendingSongs\">\n                                <h2>Trending Songs</h2>\n                                <div className = \"songs\">\n                                    <MusicElem art = \"https://i.scdn.co/image/ab67616d0000b273e9111b8b529532aa62b14bdc\" songname = \"Snow On Tha Bluff\" artist = \"J. Cole\"/>\n                                    <MusicElem art = \"https://i.scdn.co/image/ab67616d0000b27393b62d78fac956d842942c8e\" songname = \"Song 33\" artist = \"Noname\"/>\n                                    <MusicElem art = \"https://i.scdn.co/image/ab67616d0000b2733504664c17b7b99a3cb7d116\" songname = \"This Is America\" artist = \"Childish Gambino\"/>\n                                    <MusicElem art = \"https://i.scdn.co/image/ab67616d0000b273cdb645498cd3d8a2db4d05e1\" songname = \"Alright\" artist = \"Kendrick Lamar\"/>\n                                </div>\n                            </div>\n                            <div className = \"trendingPlaylists\">\n                                <h2>Trending Playlists</h2>\n                                <div className = \"songs\">\n                                    <MusicElem art = \"https://i.scdn.co/image/ab67706f0000000305a363dc5d9a8469031f6cad\" songname = \"ALL Black Lives Matter! Songs of empowerment and pride. 779, 409 Followers\"/>\n                                    <MusicElem art = \"https://i.scdn.co/image/ab67706f00000003fd92285a960405af07919690\" songname = \"Cole world. The very best of Jermaine. 458, 697 Followers\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <TrendingSidebar/>\n                </div>\n            </div>\n            \n        \n    );\n}\n\nexport default TrendingBody;","import React from 'react';\nimport Sidebar from './Sidebar';\nimport Body from './Body.js';\nimport TrendingBody from './TrendingBody.js';\nimport Footer from './Footer.tsx';\nimport \"../css/Player.css\";\nimport \"../css/Sidebar.css\";\n// import { Switch } from '@material-ui/core';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nfunction Trending({ spotify }) {\n    return (\n        <div className = \"player\">\n            {console.log(\"💜💜💜💜💜💜\")}\n            <div className = \"player_body\">\n                <Sidebar />\n                <TrendingBody spotify={spotify}/>\n            </div>\n            <Footer />\n        </div>     \n    )\n}\n\nexport default Trending;","import React, { useEffect, useState } from 'react';\nimport './css/App.css';\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport Trending from \"./components/Trending.js\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst spotify = new SpotifyWebApi();\n\n// const APIController = (function(){\n//   const clientId = '';\n//   const clientSecret = '';\n\n//   const _getToken = async () => {\n//     const result = await fetch('http://accounts.spotify.com/api/token', {\n//       method: 'POST',\n//       headers:{\n//         'Content-Type' : 'application/x-www-form-urlencoded',\n//         'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n//       },\n//       body: 'grant_type=client_credentials'\n//     });\n\n//     const data = await result.json();\n//     return data.access_token;\n//   }\n// }\n\n// )();\n\n// const _getTrack = async (token, trackEndPoint)=>{\n//   const result = await fetch(`${trackEndPoint}`,{\n//     method: 'GET',\n//     headers:{ 'Authorization' : 'Bearer ' + token}\n//   });\n\n//   const data = await result.json();\n//   return data;\n// }\n\n\nfunction App() {\n  // State is short term memory for handling variables\n  // Disappears when page refreshes\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // useEffect: Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token){\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: 'SET_USER', // sends SET_USER to reducer.js\n          user: user,\n        })\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({ // pop the token (userID) in to the DataLayer, meaning adding the user to the DataLayer\n          type: \"SET_PLAYLISTS\", // sends SET_USER to reducer.js\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist('37i9dQZEVXcM6XdGAkZACa').then(response =>{\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path = \"/\">\n            {token ? (<Player spotify={spotify}/>) : (<Login />)}\n            {console.log(\"💜💜💜💜💜💜\")}\n          </Route>\n          <Route exact path = \"/trending\">\n            {token ? (<Trending spotify={spotify}/>) : (<Login />)}\n            {console.log(\"💚💚💚💚💚\")}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","export const initialState = {\n    user: null,\n    playlists: [],\n    playing: false,\n    item: null,\n    // token: \"BQALCt34Mp8sG9VugAPPHnKLyxq_cn8P4sc13JeuPOAMFOdZM_SYXw1XQCwErtIf7MPwMUcZYlASx8KszcWKnYcPVmHrPsxgab6NH2wP1z8AIjFCsfoABv_aDu9So1jfDw\",\n};\n\nconst reducer = (state, action) =>{ // state is the status of user, playlists, etc. action is changing one of those items\n    console.log(action); \n\n    // Action -> type, [payload]\n\n    switch(action.type){\n        case \"SET_USER\": // retrieves from the dispatch in App.js\n            return {\n                ...state, // keep existing state, don't alter it\n                user: action.user,\n            };\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: action.token,\n            };\n        case \"SET_PLAYLISTS\":\n            return{\n                ...state,\n                playlists: action.playlists,\n            };\n        case \"SET_DISCOVER_WEEKLY\":\n            return {\n                ...state,\n                discover_weekly: action.discover_weekly,\n            }\n        default:\n            return state;\n    }\n} \n\nexport default reducer;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport { DataLayer } from './DataLayer';\nimport reducer, { initialState } from './reducer';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  // <BrowserRouter>\n  //   <div>\n  //     <Route component = {App}/>\n  //     <Route path='/home' render={() => <h1>Hello</h1>} />\n  //   </div>\n  // </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}